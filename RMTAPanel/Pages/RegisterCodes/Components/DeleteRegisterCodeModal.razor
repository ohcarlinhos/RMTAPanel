@inject HttpClient Http
@inject HandleHttpErrorSnackbar HandleHttpErrorSnackbar

<MudDialog>
    <DialogContent>
        <MudText Class="mb-4">
            Deseja confirmar a exclusão desse código de registro?
        </MudText>

        <CustomActionsModal IsFetch="_isFetch">
            <MudButton OnClick="Cancel">Cancelar</MudButton>
            <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="@Confirm">Confirmar</MudButton>
        </CustomActionsModal>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Parameter] public RegisterCode RegisterCode { get; set; } = new();

    private bool _isFetch;

    private void Cancel() => MudDialog!.Cancel();

    private async Task Confirm()
    {
        try
        {
            _isFetch = true;
            var response = await Http.DeleteAsync($"register-code/{RegisterCode.Id}");

            if (await HandleHttpErrorSnackbar.IsNotOk(response)) return;

            MudDialog!.Close();
        }
        catch (HttpRequestException e)
        {
            HandleHttpErrorSnackbar.GeneralError(e);
        }
        finally
        {
            _isFetch = false;
        }
    }

}