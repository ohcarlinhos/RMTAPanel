@using Shared.User
@using RMTAPanel.Pages.Users.Components.Util

@inject HttpClient Http;
@inject ISnackbar Snackbar
@inject HttpErrorSnackbarHandle HttpErrorSnackbarHandle

<MudDialog>
    <DialogContent>
        <EditForm Model="@_passwordForm" OnValidSubmit="SubmitForm">
            <DataAnnotationsValidator/>

            <MudTextField
                @bind-Value="_passwordForm.Password"
                Label="Nova senha"
                InputType="InputType.Password"
                Disabled="_isFetch"
                For="@(() => _passwordForm.Password)"/>

            <MudTextField
                @bind-Value="_passwordForm.ConfirmPassword"
                Label="Repita a nova senha"
                InputType="InputType.Password"
                Disabled="_isFetch"
                For="@(() => _passwordForm.ConfirmPassword)"/>

            <MudStack Justify="Justify.FlexEnd" Row="true" Class="mt-5">
                <MudButton OnClick="@Cancel" Disabled="_isFetch">Cancelar</MudButton>
                <MudButton ButtonType="ButtonType.Submit" Disabled="_isFetch">Alterar</MudButton>
            </MudStack>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] private MudDialogInstance? MudDialog { get; set; }
    [Parameter] public UserMap User { get; set; } = new();

    private UpdatePasswordForm _passwordForm = new();
    private bool _isFetch;

    private async Task SubmitForm()
    {
        try
        {
            _isFetch = true;
            var response = await Http.PutAsJsonAsync($"user/password/{User.Id}",
                new UpdatePasswordDto { Password = _passwordForm.Password });

            if (await HttpErrorSnackbarHandle.IsNotOk(response)) return;

            Snackbar.Add($"Senha modificada com sucesso.", Severity.Success);
            MudDialog!.Close();
        }
        catch (HttpRequestException e)
        {
            HttpErrorSnackbarHandle!.GeneralError(e);
        }
        finally
        {
            _isFetch = false;
        }
    }

    private void Cancel() => MudDialog!.Cancel();

}